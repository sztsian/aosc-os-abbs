cp -r tensorflow-${PKGVER} \
      tensorflow-${PKGVER}-py2
cp -r tensorflow-${PKGVER} \
      tensorflow-${PKGVER}-py3

export PYTHON_BIN_PATH=/usr/bin/python
export USE_DEFAULT_PYTHON_LIB_PATH=1

export HOST_C_COMPILER=/usr/bin/gcc5.4
export HOST_CXX_COMPILER=/usr/bin/g++5.4
export GCC_HOST_COMPILER_PATH=/usr/bin/gcc5.4

if [[ "${CROSS:-$ARCH}" = "amd64" ]]; then
    export TF_NEED_CUDA=1
    export TF_UNOFFICIAL_SETTING=1
    export CUDA_TOOLKIT_PATH=/usr/lib/cuda
    export CUDNN_INSTALL_PATH=/usr/lib/cuda
    export TF_CUDA_VERSION=$($CUDA_TOOLKIT_PATH/bin/nvcc --version | sed -n 's/^.*release \(.*\),.*/\1/p')
    export TF_CUDNN_VERSION=$(sed -n 's/^#define CUDNN_MAJOR\s*\(.*\).*/\1/p' $CUDNN_INSTALL_PATH/include/cudnn.h)
    export TF_CUDA_COMPUTE_CAPABILITIES=3.5,5.2
fi

export TF_NEED_GCP=0
export TF_NEED_HDFS=0
export TF_NEED_OPENCL=0
export TF_ENABLE_XLA=1
export TF_NEED_JEMALLOC=1
export TF_NEED_MKL=0
export TF_CUDA_CLANG=0
export TF_NEED_VERBS=0

export HTTP_PROXY=`echo $http_proxy | sed -e 's/\/$//'`
export HTTPS_PROXY=`echo $https_proxy | sed -e 's/\/$//'`

export CC_OPT_FLAGS="${CPPFLAGS} ${CFLAGS}"

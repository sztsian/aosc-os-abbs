cd "$SRCDIR"
git submodule init && git submodule update
# Come on, someone must be so sick to assume x86 = computers.
patch -Np1 -i "$SRCDIR"/autobuild/patches/libtgvoip-remove-sse2-flags.patch

cd "$SRCDIR"/../Libraries/qt5_6_2/qtbase
./configure \
    -prefix "$SRCDIR/../qt" \
    -release \
    -force-debug-info \
    -opensource \
    -confirm-license \
    -system-zlib \
    -system-libpng \
    -system-libjpeg \
    -system-freetype \
    -system-harfbuzz \
    -system-pcre \
    -system-xcb \
    -system-xkbcommon-x11 \
    -no-gtkstyle \
    -static \
    -nomake examples \
    -nomake tests
make -j$(nproc)
make install

export PATH="$SRCDIR/../qt/bin:$PATH"

cd "$SRCDIR"/../Libraries/qt5_6_2/qtimageformats
qmake .
make -j$(nproc)
make install

# Telegram's CMake needs full path.
export CC="/usr/bin/gcc"
export CXX="/usr/bin/g++"
export ASM="/usr/bin/as"

cd "$SRCDIR"/Telegram/gyp
"$SRCDIR"/../Libraries/gyp/gyp \
    -Dlinux_path_qt="$SRCDIR"/../qt \
    -Dlinux_lib_ssl=-lssl \
    -Dlinux_lib_crypto=-lcrypto \
    -Dlinux_lib_icu="-licuuc -licutu -licui18n" \
    -Dlinux_path_opus_include="/usr/include/opus" \
    --depth=. --generator-output=../.. -Goutput_dir=out Telegram.gyp --format=cmake

cd "$SRCDIR"

mkdir -p "$SRCDIR"/out/Release
cd "$SRCDIR"/out/Release

cmake .
if [[ "${CROSS:-$ARCH}" != "amd64" ]]; then
    make -j1
else
    make -j$(nproc)
fi

chrpath --delete "$SRCDIR"/out/Release/Telegram

install -Dm755 "$SRCDIR"/out/Release/Telegram "$PKGDIR"/usr/bin/telegram-desktop

local icon_size icon_dir
for icon_size in 16 32 48 64 128 256 512; do
	icon_dir="$PKGDIR/usr/share/icons/hicolor/${icon_size}x${icon_size}/apps"

	install -d "$icon_dir"
	install -m644 "$SRCDIR"/Telegram/Resources/art/icon${icon_size}.png "$icon_dir"/telegram-desktop.png
done
